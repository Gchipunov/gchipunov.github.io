// physics.fs
precision mediump float;

varying vec2 v_texCoord;
uniform sampler2D u_watermap; // The height map from the previous frame
uniform vec2 u_delta; // The size of one pixel: (1.0 / textureWidth, 1.0 / textureHeight)

const float DAMPING = 0.995;

void main() {
    // Sample heights of neighboring pixels
    vec4 info = texture2D(u_watermap, v_texCoord);
    
    float center = texture2D(u_watermap, v_texCoord).x;
    float up = texture2D(u_watermap, v_texCoord + vec2(0.0, u_delta.y)).x;
    float down = texture2D(u_watermap, v_texCoord - vec2(0.0, u_delta.y)).x;
    float left = texture2D(u_watermap, v_texCoord - vec2(u_delta.x, 0.0)).x;
    float right = texture2D(u_watermap, v_texCoord + vec2(u_delta.x, 0.0)).x;

    // The 'y' component stores the previous height
    float oldHeight = info.y;

    // The simplified wave equation
    float newHeight = (up + down + left + right) / 2.0 - oldHeight;
    
    // Apply damping to make waves fade out
    newHeight *= DAMPING;

    // Store the new height in 'x' and the old height (current) in 'y' for the next pass
    gl_FragColor = vec4(newHeight, center, 0.0, 1.0);
}
